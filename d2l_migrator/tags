!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BASE_URL	image_processor.py	/^BASE_URL = None$/;"	v
IMAGE_OUTDIR_PATH	image_processor.py	/^IMAGE_OUTDIR_PATH = None$/;"	v
LC_FALSE_VALUES	preprocessor.py	/^LC_FALSE_VALUES = ['f', 'false', 'n']$/;"	v
LC_TRUE_VALUES	preprocessor.py	/^LC_TRUE_VALUES = ['t', 'true', 'y']$/;"	v
MANIFEST_STYLESHEET_PATH	packager.py	/^MANIFEST_STYLESHEET_PATH = '..\/stylesheets\/imsmanifest.xsl'$/;"	v
QUESTION	image_processor.py	/^QUESTION = None$/;"	v
<<<<<<< HEAD
QUESTION_TYPES	preprocessor.py	/^QUESTION_TYPES = {'1': Q_TYPE_MULTICHOICE, '3': Q_TYPE_SHORTANSWER, '4': Q_TYPE_TRUEFALSE, '6': Q_TYPE_MULTISHORTANSWER}$/;"	v
=======
QUESTION_TYPES	preprocessor.py	/^QUESTION_TYPES = {'1': Q_TYPE_MULTICHOICE, '2': Q_TYPE_MULTIRESPONSE, '3': Q_TYPE_SHORTANSWER, '4': Q_TYPE_TRUEFALSE, '6': Q_TYPE_CUSTOM}$/;"	v
>>>>>>> develop
QUESTION_TYPE_NUMBERS	preprocessor.py	/^QUESTION_TYPE_NUMBERS = {name: num for num, name in QUESTION_TYPES.items()}$/;"	v
Q_TYPE_ALL	preprocessor.py	/^Q_TYPE_ALL = 'ALL'$/;"	v
Q_TYPE_CUSTOM	preprocessor.py	/^Q_TYPE_CUSTOM = 'CUSTOM'$/;"	v
Q_TYPE_MULTICHOICE	preprocessor.py	/^Q_TYPE_MULTICHOICE = 'MULTICHOICE'$/;"	v
Q_TYPE_MULTISHORTANSWER	preprocessor.py	/^Q_TYPE_MULTISHORTANSWER = 'MULTISHORTANSWER'$/;"	v
Q_TYPE_SHORTANSWER	preprocessor.py	/^Q_TYPE_SHORTANSWER = 'SHORTANSWER'$/;"	v
Q_TYPE_TRUEFALSE	preprocessor.py	/^Q_TYPE_TRUEFALSE = 'TRUEFALSE'$/;"	v
TEMP	image_processor.py	/^TEMP = None$/;"	v
<<<<<<< HEAD
VALID_QUESTION_TYPES	input_management.py	/^VALID_QUESTION_TYPES = ('all', 'mc', 'msa', 'sa', 'tf')$/;"	v
=======
VALID_QUESTION_TYPES	input_management.py	/^VALID_QUESTION_TYPES = ('all', 'cs', 'mc', 'mr', 'sa', 'tf')$/;"	v
WRITE_INTERMEDIATE_FILES	d2l_migrator.py	/^WRITE_INTERMEDIATE_FILES = True$/;"	v
__custom_question_titles	preprocessor.py	/^__custom_question_titles = {}$/;"	v
>>>>>>> develop
add_answer_elt	preprocessor.py	/^def add_answer_elt(question_choice, pp_answer, src_elt_name, dest_elt_name):$/;"	f
add_custom_question_title	preprocessor.py	/^def add_custom_question_title(question_title, module_title):$/;"	f
add_mc_answer_letter	preprocessor.py	/^def add_mc_answer_letter(question_choice, pp_answer):$/;"	f
add_mc_response_type	preprocessor.py	/^def add_mc_response_type(pp_answer):$/;"	f
add_mc_value_and_feedback	preprocessor.py	/^def add_mc_value_and_feedback(question, pp_answer, choice_letter):$/;"	f
add_msa_question_part	preprocessor.py	/^def add_msa_question_part(pp_parts_elt, question_part):$/;"	f
add_msa_question_part_answer	preprocessor.py	/^def add_msa_question_part_answer(pp_question_part, question_part):$/;"	f
add_msa_question_part_id	preprocessor.py	/^def add_msa_question_part_id(pp_question_part, question_part):$/;"	f
add_msa_question_part_ignore_case	preprocessor.py	/^def add_msa_question_part_ignore_case(pp_question_part, question_part):$/;"	f
add_msa_question_part_is_regex	preprocessor.py	/^def add_msa_question_part_is_regex(question_answer_text, pp_question_part):$/;"	f
add_msa_question_part_text	preprocessor.py	/^def add_msa_question_part_text(pp_question_part, question_part):$/;"	f
add_msa_question_parts	preprocessor.py	/^def add_msa_question_parts(question):$/;"	f
add_sa_answer_text	preprocessor.py	/^def add_sa_answer_text(question_answer, pp_answer):$/;"	f
add_sa_answer_value	preprocessor.py	/^def add_sa_answer_value(question_answer, pp_answer):$/;"	f
add_sa_feedback_text	preprocessor.py	/^def add_sa_feedback_text(question_answer, pp_answer):$/;"	f
add_sa_text	preprocessor.py	/^def add_sa_text(question_answer, pp_answer, text_elt_name):$/;"	f
add_sa_text_value_and_feedback	preprocessor.py	/^def add_sa_text_value_and_feedback(question, pp_answer):$/;"	f
add_tf_question_feedback_elts	preprocessor.py	/^def add_tf_question_feedback_elts(question_answer_elt, pp_answer):$/;"	f
add_tf_question_letter_elt	preprocessor.py	/^def add_tf_question_letter_elt(question_answer_elt, pp_answer):$/;"	f
add_tf_question_text_elt	preprocessor.py	/^def add_tf_question_text_elt(pp_answer):$/;"	f
add_tf_question_value_elt	preprocessor.py	/^def add_tf_question_value_elt(question_answer_elt, pp_answer):$/;"	f
add_tf_response_number	preprocessor.py	/^def add_tf_response_number(question_answer, pp_answer):$/;"	f
add_tf_response_text	preprocessor.py	/^def add_tf_response_text(question_answer, pp_answer):$/;"	f
add_tf_response_type	preprocessor.py	/^def add_tf_response_type(pp_answer):$/;"	f
archive_contains_image_file	image_processor.py	/^def archive_contains_image_file(archive_path, image_file_name):$/;"	f
build_archive_path	image_processor.py	/^def build_archive_path(image_id):$/;"	f
build_assessment_etree	packager.py	/^def build_assessment_etree(etree, index_of_assessment_to_package):$/;"	f
build_manifest_etree	packager.py	/^def build_manifest_etree(assessment_ident, assessment_title, file_name):$/;"	f
check_tf_answer_order	preprocessor.py	/^def check_tf_answer_order(pp_answers):$/;"	f
collect_input	input_management.py	/^def collect_input(argv):$/;"	f
copy_image_file	image_processor.py	/^def copy_image_file(image_id):$/;"	f
copy_image_file_and_replace_img_src	image_processor.py	/^def copy_image_file_and_replace_img_src(image_text_match):$/;"	f
copy_image_files_and_replace_img_srcs	image_processor.py	/^def copy_image_files_and_replace_img_srcs(question_text_elt):$/;"	f
d2l_migrator	input_management.py	/^import d2l_migrator$/;"	i
deepcopy	packager.py	/^from copy import deepcopy$/;"	i
delete_temp_dir	packager.py	/^def delete_temp_dir(temp_dir_path):$/;"	f
dir_doesnt_exist	input_management.py	/^def dir_doesnt_exist(dir_path):$/;"	f
etree	d2l_migrator.py	/^from lxml import etree$/;"	i
etree	image_processor.py	/^from lxml import etree$/;"	i
etree	packager.py	/^from lxml import etree$/;"	i
etree	preprocessor.py	/^from lxml import etree$/;"	i
etree	transformer.py	/^from lxml import etree$/;"	i
file_doesnt_exist	input_management.py	/^def file_doesnt_exist(file_path):$/;"	f
find_default_feedback	preprocessor.py	/^def find_default_feedback(question):$/;"	f
find_existing_question_titles	preprocessor.py	/^def find_existing_question_titles(diffdir):$/;"	f
find_question_answer_elt_by_text_value	preprocessor.py	/^def find_question_answer_elt_by_text_value(question, text_val):$/;"	f
fnmatch	preprocessor.py	/^import fnmatch, logging, os, sys$/;"	i
get_existing_file_paths	preprocessor.py	/^def get_existing_file_paths(diffdir):$/;"	f
get_ignore_case	preprocessor.py	/^def get_ignore_case(question):$/;"	f
get_image_file_name_by_asset_id	image_processor.py	/^def get_image_file_name_by_asset_id(asset_id):$/;"	f
get_input	d2l_migrator.py	/^def get_input(argv):$/;"	f
get_question_text_elt	image_processor.py	/^def get_question_text_elt(question):$/;"	f
<<<<<<< HEAD
get_question_type	preprocessor.py	/^def get_question_type(question_type):$/;"	f
get_tf_text_for_blank_value	preprocessor.py	/^def get_tf_text_for_blank_value(question_answer):$/;"	f
get_tf_text_inverse_of	preprocessor.py	/^def get_tf_text_inverse_of(tf_answer_text):$/;"	f
=======
get_question_type_symbol	preprocessor.py	/^def get_question_type_symbol(question_type):$/;"	f
>>>>>>> develop
getopt	input_management.py	/^import sys, getopt, os.path$/;"	i
image_processor	preprocessor.py	/^import image_processor$/;"	i
init_sa_feedback	preprocessor.py	/^def init_sa_feedback():$/;"	f
input_management	d2l_migrator.py	/^import input_management, packager, preprocessor, transformer$/;"	i
is_sa_answer	preprocessor.py	/^def is_sa_answer(question_answer):$/;"	f
is_sa_element	preprocessor.py	/^def is_sa_element(question_answer, element_name):$/;"	f
is_sa_feedback	preprocessor.py	/^def is_sa_feedback(question_answer):$/;"	f
<<<<<<< HEAD
logging	d2l_migrator.py	/^import logging, os.path, sys$/;"	i
logging	preprocessor.py	/^import sys, logging$/;"	i
=======
logging	d2l_migrator.py	/^import sys, os.path, logging$/;"	i
logging	preprocessor.py	/^import fnmatch, logging, os, sys$/;"	i
>>>>>>> develop
main	d2l_migrator.py	/^def main(argv):$/;"	f
make_image_outdir	image_processor.py	/^def make_image_outdir(outdir):$/;"	f
make_temp_dir	packager.py	/^def make_temp_dir(name, outdir_path):$/;"	f
os	d2l_migrator.py	/^import logging, os.path, sys$/;"	i
os	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
os	input_management.py	/^import sys, getopt, os.path$/;"	i
os	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
os	preprocessor.py	/^import fnmatch, logging, os, sys$/;"	i
p2_unicode_utils	preprocessor.py	/^import p2_unicode_utils$/;"	i
package_assessment	packager.py	/^def package_assessment(etree, index_of_assessment_to_package, outdir_path):$/;"	f
package_assessments	packager.py	/^def package_assessments(etree, outdir_path):$/;"	f
<<<<<<< HEAD
packager	d2l_migrator.py	/^import input_management, packager, preprocessor, transformer$/;"	i
path	d2l_migrator.py	/^import logging, os.path, sys$/;"	i
=======
packager	d2l_migrator.py	/^import input_management, transformer, preprocessor, packager$/;"	i
parse_question_source_file	preprocessor.py	/^def parse_question_source_file(infile_path):$/;"	f
path	d2l_migrator.py	/^import sys, os.path, logging$/;"	i
>>>>>>> develop
path	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
path	input_management.py	/^import sys, getopt, os.path$/;"	i
path	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
preprocessor	d2l_migrator.py	/^import input_management, packager, preprocessor, transformer$/;"	i
print_usage	d2l_migrator.py	/^def print_usage(msg='Usage:'):$/;"	f
process	preprocessor.py	/^def process(infile_path, base_url, outdir, question_type, diffdir):$/;"	f
process_cs_question	preprocessor.py	/^def process_cs_question(question):$/;"	f
process_images	image_processor.py	/^def process_images(question, base_url, outdir):$/;"	f
process_mc_answer	preprocessor.py	/^def process_mc_answer(question, question_choice):$/;"	f
process_mc_question	preprocessor.py	/^def process_mc_question(question):$/;"	f
process_msa_question	preprocessor.py	/^def process_msa_question(question):$/;"	f
process_questions	preprocessor.py	/^def process_questions(intree, base_url, outdir):$/;"	f
process_sa_answer	preprocessor.py	/^def process_sa_answer(question_answer):$/;"	f
process_sa_question	preprocessor.py	/^def process_sa_question(question):$/;"	f
process_tf_answer	preprocessor.py	/^def process_tf_answer(question, question_answer):$/;"	f
process_tf_question	preprocessor.py	/^def process_tf_question(question):$/;"	f
re	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
re	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
remove_assessments_without_question_type	preprocessor.py	/^def remove_assessments_without_question_type(question_type, source_etree):$/;"	f
remove_duplicate_questions_from_module	preprocessor.py	/^def remove_duplicate_questions_from_module(module_etree, existing_question_titles):$/;"	f
remove_duplicate_questions_from_source	preprocessor.py	/^def remove_duplicate_questions_from_source(source_etree, diffdir):$/;"	f
remove_empty_assessments_from_modules	preprocessor.py	/^def remove_empty_assessments_from_modules(source_etree):$/;"	f
remove_questions_other_than	preprocessor.py	/^def remove_questions_other_than(question_type, source_etree):$/;"	f
rename_image_file	image_processor.py	/^def rename_image_file(image_file_path, image_id):$/;"	f
set_up_logging	preprocessor.py	/^def set_up_logging(source_etree):$/;"	f
shutil	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
shutil	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
sys	d2l_migrator.py	/^import logging, os.path, sys$/;"	i
sys	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
sys	input_management.py	/^import sys, getopt, os.path$/;"	i
sys	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
sys	preprocessor.py	/^import fnmatch, logging, os, sys$/;"	i
to_str	p2_unicode_utils.py	/^def to_str(unicode_or_str):$/;"	f
to_unicode	p2_unicode_utils.py	/^def to_unicode(unicode_or_str):$/;"	f
transform_data	transformer.py	/^def transform_data(source_etree, stylesheet):$/;"	f
transformer	d2l_migrator.py	/^import input_management, packager, preprocessor, transformer$/;"	i
transformer	packager.py	/^import transformer$/;"	i
update_sa_feedback	preprocessor.py	/^def update_sa_feedback(question_answer, pp_feedback):$/;"	f
validate_input	input_management.py	/^def validate_input(infile, stylesheet, outdir, base_url, question_type, diffdir):$/;"	f
write_archive	packager.py	/^def write_archive(assessment_xml_doc_path, manifest_file_path, archive_path):$/;"	f
write_assessment_xml_doc	packager.py	/^def write_assessment_xml_doc(assessment_etree, outdir_path):$/;"	f
write_manifest_file	packager.py	/^def write_manifest_file(assessment_ident, assessment_title, assessment_xml_doc_path, temp_dir_path):$/;"	f
write_outfile	d2l_migrator.py	/^def write_outfile(dom, outfile_path):$/;"	f
zipfile	image_processor.py	/^import sys, re, os, os.path, shutil, zipfile$/;"	i
zipfile	packager.py	/^import sys, os.path, zipfile, shutil, re$/;"	i
